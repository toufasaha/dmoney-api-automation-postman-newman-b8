{
	"info": {
		"_postman_id": "a63e5b33-de02-4c04-baf7-c02346767eb8",
		"name": "Dmoney",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16824487",
		"_collection_link": "https://www.postman.com/martian-zodiac-870921/workspace/road-to-sdet/collection/16824487-a63e5b33-de02-4c04-baf7-c02346767eb8?action=share&source=collection_link&creator=16824487"
	},
	"item": [
		{
			"name": "Create Agent & Customer",
			"item": [
				{
					"name": "Admin Login with invalid credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking Status Code\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"admin@roadtocareer.nett\",\r\n    \"password\":\"12345\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"token\", jsonData.token);\r",
									"pm.environment.set(\"token\", jsonData.token);\r",
									"\r",
									"\r",
									"\r",
									"//Checking Status Code\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Checking Role\r",
									"pm.test(\"Admin\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.role).to.eql(\"Admin\");\r",
									"});\r",
									"\r",
									"//Checking message\r",
									"pm.test(\"Login successfully\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Login successfully\");\r",
									"});\r",
									"\r",
									"\r",
									"//Checking Response Time\r",
									"pm.test(\"Response time is less than 50ms\", () => {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(50);\r",
									"});\r",
									"\r",
									"\r",
									"//Checking Content Type\r",
									"pm.test(\"application/json\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"admin@roadtocareer.net\",\r\n    \"password\":\"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Agent",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var randomDigits = _.random(1000000, 9999999);\r",
									"pm.environment.set(\"phoneNumber\", randomDigits);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"phone_number\", jsonData.user.phone_number);\r",
									"pm.collectionVariables.set(\"email\", jsonData.user.email);\r",
									"pm.collectionVariables.set(\"password\", jsonData.user.password);\r",
									"\r",
									"\r",
									"//Checking Role\r",
									"pm.test(\"Agent\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.user.role).to.eql(\"Agent\");\r",
									"});\r",
									"\r",
									"\r",
									"//Checking Status Code\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"\r",
									"//Checking Response Time\r",
									"pm.test(\"Response time is less than 60ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(60);\r",
									"});\r",
									"\r",
									"\r",
									"//Compare Name Of The Agent\r",
									"const myRequest = pm.request.toJSON().body.raw;\r",
									"console.log(myRequest);\r",
									"pm.globals.set(\"name\", myRequest.name);\r",
									"\r",
									"const myResponse = pm.response.json();\r",
									"console.log(JSON.stringify(myResponse));\r",
									"pm.globals.set(\"name\", myResponse.name);\r",
									"\r",
									"\r",
									"if(myRequest.name === JSON.stringify(myResponse.name)){\r",
									"    console.log(\"Request & Response MATCH\");\r",
									"}\r",
									"else{\r",
									"    console.log(\"Request & Response DONT MATCH\");\r",
									"}\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Secret-Key",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"{{$randomPassword}}\",\r\n    \"phone_number\":\"0171{{phoneNumber}}\",\r\n    \"nid\":\"1234789428\",\r\n    \"role\":\"Agent\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Customer1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var randomDigits = _.random(1000000, 9999999);\r",
									"pm.environment.set(\"phoneNumber\", randomDigits);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"phone_number1\", jsonData.user.phone_number);\r",
									"\r",
									"pm.collectionVariables.set(\"email1\", jsonData.user.email);\r",
									"pm.collectionVariables.set(\"password1\", jsonData.user.password);\r",
									"\r",
									"\r",
									"\r",
									"//Checking Role\r",
									"pm.test(\"Customer\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.user.role).to.eql(\"Customer\");\r",
									"});\r",
									"\r",
									"\r",
									"//Checking Status Code\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"\r",
									"//Checking Response Time\r",
									"pm.test(\"Response time is less than 65ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(65);\r",
									"});\r",
									"\r",
									"\r",
									"//Compare Name Of The Customer1\r",
									"const myRequest = pm.request.toJSON().body.raw;\r",
									"console.log(myRequest);\r",
									"pm.globals.set(\"TestEmail\", myRequest.email);\r",
									"\r",
									"const myResponse = pm.response.json();\r",
									"console.log(JSON.stringify(myResponse));\r",
									"pm.globals.set(\"TestEmail\", myResponse.email);\r",
									"\r",
									"\r",
									"if(myRequest.name === JSON.stringify(myResponse.name)){\r",
									"    console.log(\"Request & Response MATCH\");\r",
									"}\r",
									"else{\r",
									"    console.log(\"Request & Response DONT MATCH\");\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Secret-Key",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"{{$randomPassword}}\",\r\n    \"phone_number\":\"0171{{phoneNumber}}\",\r\n    \"nid\":\"1234789428\",\r\n    \"role\":\"Customer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Customer2 with Invalid Phone No.",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//var randomDigits = _.random(1000000, 9999999);\r",
									"//pm.environment.set(\"phoneNumber\", randomDigits);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"//Checking Status Code\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Secret-Key",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"{{$randomPassword}}\",\r\n    \"phone_number\":\"017180099857\",\r\n    \"nid\":\"1234789428\",\r\n    \"role\":\"Customer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Customer2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var randomDigits = _.random(1000000, 9999999);\r",
									"pm.environment.set(\"phoneNumber\", randomDigits);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.collectionVariables.set(\"phone_number2\", jsonData.user.phone_number);\r",
									"pm.collectionVariables.set(\"email2\", jsonData.user.email);\r",
									"pm.collectionVariables.set(\"password2\", jsonData.user.password);\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"//Checking Role\r",
									"pm.test(\"Customer\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.user.role).to.eql(\"Customer\");\r",
									"});\r",
									"\r",
									"\r",
									"//Checking Status Code\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"\r",
									"//Checking Response Time\r",
									"pm.test(\"Response time is less than 65ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(65);\r",
									"});\r",
									"\r",
									"\r",
									"//Compare Name Of The Customer2\r",
									"const myRequest = pm.request.toJSON().body.raw;\r",
									"console.log(myRequest);\r",
									"pm.globals.set(\"TestEmail1\", myRequest.email);\r",
									"\r",
									"const myResponse = pm.response.json();\r",
									"console.log(JSON.stringify(myResponse));\r",
									"pm.globals.set(\"TestEmail1\", myResponse.email);\r",
									"\r",
									"\r",
									"if(myRequest.name === JSON.stringify(myResponse.name)){\r",
									"    console.log(\"Request & Response MATCH\");\r",
									"}\r",
									"else{\r",
									"    console.log(\"Request & Response DONT MATCH\");\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Secret-Key",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\r\n    \"name\":\"{{$randomFullName}}\",\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\":\"{{$randomPassword}}\",\r\n    \"phone_number\":\"0171{{phoneNumber}}\",\r\n    \"nid\":\"1234789428\",\r\n    \"role\":\"Customer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"create"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Deposit Money To Agent",
			"item": [
				{
					"name": "System Login with Invalid Credential",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"token\", jsonData.token);\r",
									"pm.environment.set(\"token\", jsonData.token);\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"//Checking Messgae\r",
									"pm.test(\"User not found\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"User not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"system@test.com  \",\r\n    \"password\": \"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "System Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"token\", jsonData.token);\r",
									"pm.environment.set(\"token\", jsonData.token);\r",
									"\r",
									"\r",
									"\r",
									"//Checking Role\r",
									"pm.test(\"Agent\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.role).to.eql(\"Agent\");\r",
									"});\r",
									"\r",
									"\r",
									"//Checking Response Time\r",
									"pm.test(\"Response time is greater than 65ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.greaterThan(65);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"system@test.com\",\r\n    \"password\": \"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposit Money",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"phone_number\");\r",
									"console.log(pm.collectionVariables.get(\"phone_number\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Secret-Key",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"amount\":8000,\r\n    \"from_account\":\"SYSTEM\",\r\n    \"to_account\":\"{{phone_number}}\"\r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://dmoney.roadtocareer.net/transaction/deposit",
							"protocol": "https",
							"host": [
								"dmoney",
								"roadtocareer",
								"net"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposit Money with valid Amount",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"phone_number\");\r",
									"console.log(pm.collectionVariables.get(\"phone_number\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking Status Code\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Secret-Key",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"amount\":9999,\r\n    \"from_account\":\"SYSTEM\",\r\n    \"to_account\":\"{{phone_number}}\"\r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://dmoney.roadtocareer.net/transaction/deposit",
							"protocol": "https",
							"host": [
								"dmoney",
								"roadtocareer",
								"net"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposit Money with invalid Amount",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"phone_number\");\r",
									"console.log(pm.collectionVariables.get(\"phone_number\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking Status Code\r",
									"pm.test(\"Status code is 208\", function () {\r",
									"    pm.response.to.have.status(208);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Secret-Key",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"amount\":9.86,\r\n    \"from_account\":\"SYSTEM\",\r\n    \"to_account\":\"{{phone_number}}\"\r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://dmoney.roadtocareer.net/transaction/deposit",
							"protocol": "https",
							"host": [
								"dmoney",
								"roadtocareer",
								"net"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Deposit Money To Customer1",
			"item": [
				{
					"name": "Agent Login with Invalid Method",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"token\", jsonData.token);\r",
									"pm.environment.set(\"token\", jsonData.token);\r",
									"\r",
									"\r",
									"//Checking message\r",
									"pm.test(404, function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"email\");\r",
									"pm.collectionVariables.get(\"password\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"{{email}}\",\r\n    \"password\":\"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Agent Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"token\", jsonData.token);\r",
									"pm.environment.set(\"token\", jsonData.token);\r",
									"\r",
									"\r",
									"//Checking message\r",
									"pm.test(\"Login successfully\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Login successfully\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"email\");\r",
									"pm.collectionVariables.get(\"password\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"{{email}}\",\r\n    \"password\":\"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposit Money with Invalid To Account",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"phone_number\");\r",
									"console.log(pm.collectionVariables.get(\"phone_number\"));\r",
									"pm.collectionVariables.get(\"phone_number1\");\r",
									"console.log(pm.collectionVariables.get(\"phone_number1\"));\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Account Number Comparison\r",
									"const myResponse = pm.response.json();\r",
									"console.log(JSON.stringify(myResponse));\r",
									"pm.globals.set(\"Ph_Num\", myResponse.from_account);\r",
									"pm.globals.set(\"Ph_Num1\", myResponse.to_account);\r",
									"\r",
									"\r",
									"if ( pm.expect(myResponse.from_account).to.eql(myResponse.to_account)){\r",
									"    console.log(\"From account & to account is equal\");\r",
									"}\r",
									"else{\r",
									"    console.log(\"From account & to account is not equal\");\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Secret-Key",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"amount\":5000,\r\n    \"from_account\":\"{{phone_number}}\",\r\n    \"to_account\":\"{{phone_number}}\"\r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://dmoney.roadtocareer.net/transaction/deposit",
							"protocol": "https",
							"host": [
								"dmoney",
								"roadtocareer",
								"net"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deposit Money",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"phone_number\");\r",
									"console.log(pm.collectionVariables.get(\"phone_number\"));\r",
									"pm.collectionVariables.get(\"phone_number1\");\r",
									"console.log(pm.collectionVariables.get(\"phone_number1\"));\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking message\r",
									"pm.test(\"Deposit successful\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Deposit successful\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Secret-Key",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"amount\":5000,\r\n    \"from_account\":\"{{phone_number}}\",\r\n    \"to_account\":\"{{phone_number1}}\"\r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://dmoney.roadtocareer.net/transaction/deposit",
							"protocol": "https",
							"host": [
								"dmoney",
								"roadtocareer",
								"net"
							],
							"path": [
								"transaction",
								"deposit"
							]
						}
					},
					"response": []
				},
				{
					"name": "Agent Check Insufficient Balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking message\r",
									"pm.test(0, function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.balance).to.eql(\"0\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Secret-Key",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transaction/balance/{{phone_number}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"balance",
								"{{phone_number}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Agent Check Balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking message\r",
									"pm.test(\"User balance\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"User balance\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Secret-Key",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/balance/{{phone_number}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"balance",
								"{{phone_number}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"",
							"",
							"",
							""
						]
					}
				}
			]
		},
		{
			"name": "Withdraw Money from Agent",
			"item": [
				{
					"name": "Customer1 Login with Invalid Credential",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"token\", jsonData.token);\r",
									"pm.environment.set(\"token\", jsonData.token);\r",
									"\r",
									"\r",
									"//Checking Status Code\r",
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"email1\");\r",
									"pm.collectionVariables.get(\"password1\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"{{email1}}\",\r\n    \"password\":\"{{13789  }}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Customer1 Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"token\", jsonData.token);\r",
									"pm.environment.set(\"token\", jsonData.token);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"email1\");\r",
									"pm.collectionVariables.get(\"password1\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"{{email1}}\",\r\n    \"password\":\"{{password1}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Withdraw Money with Insufficient Balance",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"phone_number\");\r",
									"console.log(pm.collectionVariables.get(\"phone_number\"));\r",
									"pm.collectionVariables.get(\"phone_number1\");\r",
									"console.log(pm.collectionVariables.get(\"phone_number1\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking message\r",
									"pm.test(\"Insufficient balance\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Insufficient balance\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Secret-Key",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"amount\": 5622,\r\n    \"from_account\": \"{{phone_number1}}\",\r\n    \"to_account\": \"{{phone_number}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/withdraw",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"withdraw"
							]
						}
					},
					"response": []
				},
				{
					"name": "Withdraw Money",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"phone_number\");\r",
									"console.log(pm.collectionVariables.get(\"phone_number\"));\r",
									"pm.collectionVariables.get(\"phone_number1\");\r",
									"console.log(pm.collectionVariables.get(\"phone_number1\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking message\r",
									"pm.test(\"Withdraw successful\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Withdraw successful\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Secret-Key",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"amount\": 2000,\r\n    \"from_account\": \"{{phone_number1}}\",\r\n    \"to_account\": \"{{phone_number}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/withdraw",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"withdraw"
							]
						}
					},
					"response": []
				},
				{
					"name": "Customer Check Expected Balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking message\r",
									"pm.test(10000, function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.balance).to.greaterThan(10000);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Secret-Key",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/balance/{{phone_number}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"balance",
								"{{phone_number}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Customer Check Balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking message\r",
									"pm.test(10, function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.balance).to.greaterThan(10);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Secret-Key",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/balance/{{phone_number}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"balance",
								"{{phone_number}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send Money To Another Customer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"phone_number1\");\r",
									"console.log(pm.collectionVariables.get(\"phone_number1\"));\r",
									"pm.collectionVariables.get(\"phone_number2\");\r",
									"console.log(pm.collectionVariables.get(\"phone_number2\"));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking message\r",
									"pm.test(\"Send money successful\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Send money successful\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Secret-Key",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"amount\": 1000,\r\n    \"from_account\": \"{{phone_number1}}\",\r\n    \"to_account\": \"{{phone_number2}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/sendmoney",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"sendmoney"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Payment From Customer2",
			"item": [
				{
					"name": "Customer2 Login with Invalid Credential",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"token\", jsonData.token);\r",
									"pm.environment.set(\"token\", jsonData.token);\r",
									"\r",
									"\r",
									"//Checking Status Code\r",
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"email2\");\r",
									"pm.collectionVariables.get(\"password2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"{{email2}}\",\r\n    \"password\":\"{{  123   }}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Customer2 Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"token\", jsonData.token);\r",
									"pm.environment.set(\"token\", jsonData.token);\r",
									"\r",
									"\r",
									"//Checking Status Code\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"email2\");\r",
									"pm.collectionVariables.get(\"password2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"{{email2}}\",\r\n    \"password\":\"{{password2}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Payment To Merchant with Invalid Account",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"phone_number2\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking message\r",
									"pm.test(\"From A/C should be customer or agent and To A/C should be merchant type\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"From A/C should be customer or agent and To A/C should be merchant type\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Secret-Key",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"amount\": 10,\r\n    \"from_account\": \"{{phone_number2}}\",\r\n    \"to_account\": \"01772379048\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/payment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Payment To Merchant",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.get(\"phone_number2\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking message\r",
									"pm.test(\"Payment successful\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Payment successful\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Secret-Key",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"amount\": 10,\r\n    \"from_account\": \"{{phone_number2}}\",\r\n    \"to_account\": \"01686606905\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/transaction/payment",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"payment"
							]
						}
					},
					"response": []
				},
				{
					"name": "Balance of Customer2",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Secret-Key",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transaction/balance/{{phone_number2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"balance",
								"{{phone_number2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Statement of Customer2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking message\r",
									"pm.test(\"Transaction list\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.message).to.eql(\"Transaction list\");\r",
									"});\r",
									"\r",
									"\r",
									"//Checking message\r",
									"pm.test(0, function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.count).to.greaterThan(0);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Secret-Key",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transaction/statement/{{phone_number2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"statement",
								"{{phone_number2}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Merchant",
			"item": [
				{
					"name": "Merchant Login with Invalid Credential",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"token\", jsonData.token);\r",
									"pm.environment.set(\"token\", jsonData.token);\r",
									"\r",
									"\r",
									"//Checking Status Code\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"Merchant@roadtocareer.net\",\r\n    \"password\":\"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Merchant Login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();\r",
									"pm.collectionVariables.set(\"token\", jsonData.token);\r",
									"pm.environment.set(\"token\", jsonData.token);\r",
									"\r",
									"\r",
									"//Checking Status Code\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//Checking Role\r",
									"pm.test(\"Merchant\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.role).to.eql(\"Merchant\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\":\"merchant@roadtocareer.net\",\r\n    \"password\":\"1234\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Checking message\r",
									"pm.test(0, function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.balance).to.greaterThan(0);\r",
									"    console.log(\"Balance is greater than 0\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "X-Auth-Secret-Key",
								"value": "ROADTOSDET",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transaction/balance/01686606905",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transaction",
								"balance",
								"01686606905"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://dmoney.roadtocareer.net",
			"type": "string"
		},
		{
			"key": "token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6Im1lcmNoYW50QHJvYWR0b2NhcmVlci5uZXQiLCJwYXNzd29yZCI6IjEyMzQiLCJpYXQiOjE2OTM1ODI4MjgsImV4cCI6MTY5MzU4NDYyOH0.1DB9L0RX0Ksy9enOKjOS__RVQMre6lJBW7WdUHBOyTM"
		},
		{
			"key": "phoneNumber",
			"value": 1041608
		},
		{
			"key": "id",
			"value": 25110
		},
		{
			"key": "phone_number",
			"value": "01717585814"
		},
		{
			"key": "phone_number1",
			"value": "01717207040"
		},
		{
			"key": "email",
			"value": "Daija21@hotmail.com"
		},
		{
			"key": "password",
			"value": "q8VCle3wcmvJBJI"
		},
		{
			"key": "email1",
			"value": "Fern71@yahoo.com"
		},
		{
			"key": "password1",
			"value": "rww8KR9EW_IMayO"
		},
		{
			"key": "phone_number2",
			"value": "01716714300"
		},
		{
			"key": "email2",
			"value": "Chaim84@hotmail.com"
		},
		{
			"key": "password2",
			"value": "peAhn9I4OI790Bc"
		}
	]
}